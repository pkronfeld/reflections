What happens when you initialize a repository? Why do you need to do it?

	Git creates a directory for that project containing all the related files, 
	so that when changes are made all those files are tied together. This keeps the
	relationships intact when backtracking and troubleshooting.
	
How is the staging area different from the working directory and the repository? 
What value do you think it offers?

	Staging area holds just the files you are currently working on, the working
	directory holds all the files, and the repository holds the commit history.
	
	With the staging area, I can work on just the files that are going to be
	affected by modifications. No need to load files that will not be modified.
	
How can you use the staging area to make sure you have one commit per logical change?
	
	By adding only one file (or one group of interrelated files) at a time to the
	staging area. Once a significant change has been made, all the files can be
	committed at once in a logical manner. Be sure to add a descriptive comment that
	lets you know what that change entailed.
	
What are some situations when branches would be helpful keeping your history organized?
How would branches help?

	Branches would be very helpful for major changes or experimental ideas. That way
	there are two or more versions that reflect different but plausible ways your
	program could end up looking like. If you decide to terminate the experiment,
	you have your master intact up to that point. No need to trace back thru many
	commits to find where the experiment started.
	
How do the diagrams help you visualize the branch structure?

	The diagram clearly indicates which commit came before the new branch, and how
	each branch was independently modified thereon out.